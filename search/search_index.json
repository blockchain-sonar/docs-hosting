{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Blockchain Sonar Build: ${{ local.build_date }} TDB Environments Production The Blockchain Sonar production environment is live and used by our own web application on www.blockchain-sonar.com . Production Landing Site: https://www.blockchain-sonar.com Production Dashboard Site: https://dashboard.blockchain-sonar.com Production API: https://api.blockchain-sonar.com Test The Blockchain Sonar test environment is used by default in our examples and the SDK. It is entirely separate from Blockchain Sonar production and there is no overlap in data and accounts. To use the test environment, you will need to create accounts at dashboard.blockchain-sonar-test.com . Test Landing Site: https://www.blockchain-sonar-test.com Test Dashboard Site: https://dashboard.blockchain-sonar-test.com Test API: https://api.blockchain-sonar-test.com This environment is connected to the relevant Blockchain Test Networks and provides tools to emulate blockchain activity. References Blocknative powers transparency and profit for builders and traders alike. Our platform is the easy way to work with mempool data. mempool.space is developed and operated for the Bitcoin community, focusing on the emerging transaction fee market to help our transition into a multi-layer ecosystem, without ads, altcoins, or third-party trackers. SoChain 's fast blockchain API is the easiest, most cost-effective way to build applications on Bitcoin, Litecoin, Dogecoin, Zcash, and Dash. We also offer Test Networks for developers to get started in a sandbox environment. Currency is just the first application of the Blockchain, and there's alot more to come. We're helping you make the future happen. TATUM provides fastest way to develop blockchain apps. Unlock and integrate blockchain to any application without any blockchain expertise. Tatum brings multiple blockchain frameworks together into one simple REST API. See all supported blockchains. To get access to free blockchain infrastructure, sign up, and you're ready to go! Blockchair API provides developers, researchers, and businesses with access to data contained in 17 blockchains. The API supports numerous analytical queries like filtering, sorting, and aggregating blockchain data with high uptime. BitPay builds powerful, enterprise-grade tools for crypto acceptance and spending BitGo enables our clients to navigate the complex landscape of digital assets with a connected, compliant, and secure suite of solutions.","title":"Introduction"},{"location":"#blockchain-sonar","text":"Build: ${{ local.build_date }} TDB","title":"Blockchain Sonar"},{"location":"#environments","text":"","title":"Environments"},{"location":"#production","text":"The Blockchain Sonar production environment is live and used by our own web application on www.blockchain-sonar.com . Production Landing Site: https://www.blockchain-sonar.com Production Dashboard Site: https://dashboard.blockchain-sonar.com Production API: https://api.blockchain-sonar.com","title":"Production"},{"location":"#test","text":"The Blockchain Sonar test environment is used by default in our examples and the SDK. It is entirely separate from Blockchain Sonar production and there is no overlap in data and accounts. To use the test environment, you will need to create accounts at dashboard.blockchain-sonar-test.com . Test Landing Site: https://www.blockchain-sonar-test.com Test Dashboard Site: https://dashboard.blockchain-sonar-test.com Test API: https://api.blockchain-sonar-test.com This environment is connected to the relevant Blockchain Test Networks and provides tools to emulate blockchain activity.","title":"Test"},{"location":"#references","text":"Blocknative powers transparency and profit for builders and traders alike. Our platform is the easy way to work with mempool data. mempool.space is developed and operated for the Bitcoin community, focusing on the emerging transaction fee market to help our transition into a multi-layer ecosystem, without ads, altcoins, or third-party trackers. SoChain 's fast blockchain API is the easiest, most cost-effective way to build applications on Bitcoin, Litecoin, Dogecoin, Zcash, and Dash. We also offer Test Networks for developers to get started in a sandbox environment. Currency is just the first application of the Blockchain, and there's alot more to come. We're helping you make the future happen. TATUM provides fastest way to develop blockchain apps. Unlock and integrate blockchain to any application without any blockchain expertise. Tatum brings multiple blockchain frameworks together into one simple REST API. See all supported blockchains. To get access to free blockchain infrastructure, sign up, and you're ready to go! Blockchair API provides developers, researchers, and businesses with access to data contained in 17 blockchains. The API supports numerous analytical queries like filtering, sorting, and aggregating blockchain data with high uptime. BitPay builds powerful, enterprise-grade tools for crypto acceptance and spending BitGo enables our clients to navigate the complex landscape of digital assets with a connected, compliant, and secure suite of solutions.","title":"References"},{"location":"1.local/","text":"// https://mempool.space/api // wscat -connect wss://mempool.space/api/v1/ws { \"action\" : \"want\" , \"data\" : [ \"blocks\" ] } { \"track-address\" : \"3FMrYD7NyAugUjAPxiFEohgkDG3DxfVhZT\" }","title":"1.local"},{"location":"api/","text":"API Test Environment The Blockchain Sonar test environment is used by default in our API call examples. To use curl examples as-is, please export environment variable YOUR_API_KEY : export YOUR_API_KEY = \"<Your API key from Dashboard>\" Getting Started Choose API endpoint See Environments section. Setup API Key Create a Blockchain Sonar account (it is free of any charges) by clicking the Sign up button on Landing site and following the instructions. Account creation requires email confirmation to complete. Create a first API key from your account page on Dashboard site by clicking the Add new API key button in API Keys section. iuiip Events Subscription Long Polling Use this method to receive incoming events using long polling on a Fetch events resource. Webhook Subscriber Create a new Webhook subscriber for an API key by clicking the Add a Webhook Subscriber button to the right of the API key. Optionally, see for Webhook Subscriber Advanced Settings to setup webhook authentication, retry policy, etc. WebSocket Subscriber Create a new WebSocket subscriber for an API key by clicking the Add a WebSocket Subscriber button to the right of the API key. Optionally, see for WebSocket Subscriber Advanced Settings to setup webhook authentication, retry policy, etc. Resources List watched addresses Using this resource you can list all addresses that you have created. Parameters: Name Type Mandatory Description currency STRING NO Filter by currency . Comma separated combination of currency acronyms like BTC, DASH, ETH, etc. beforeId STRING NO Request page before (newer) this pagination id. Pagination's param . afterId STRING NO Request page after (older) this pagination id. Pagination's param . limit INT NO Number of results per request. Default 500; max 1000. Pagination's param . Request: application/json GET /v1/address HTTP/1.1 Authorization: Bearer ${YOUR_API_KEY} Accept: application/json text/csv GET /v1/address HTTP/1.1 Authorization: Bearer ${YOUR_API_KEY} Accept: text/csv Response: application/json HTTP/1.1 200 OK Content-Type: application/json { \"$schema\" : \"https://schemas.blockchain-sonar.com/v1/address/list/response.json\" , \"before\" : null , \"after\" : \"/v1/address?currency=BTC&afterId=48ed1d3f-3f16-4626-82f1-3bf62cdc7238\" , \"items\" : [ { \"id\" : \"80c9e6a1-4bc6-4459-b09b-7a5c0226e85c\" , \"at\" : \"2020-01-21T22:00:11.183Z\" , \"currency\" : \"BTC\" , \"address\" : \"3ATtmYVkHbqpUsVdifZ9pe1BqhZMonHD7H\" }, { \"id\" : \"2e924046-c6aa-40eb-89b4-7aacfd78cc0a\" , \"at\" : \"2020-01-15T12:00:11.183Z\" , \"currency\" : \"BTC\" , \"address\" : \"1738aQbJgGsQBHbhLqwX7MaBcjLY1PoDUf\" }, ... , { \"id\" : \"48ed1d3f-3f16-4626-82f1-3bf62cdc7238\" , \"at\" : \"2020-01-02T07:00:11.183Z\" , \"currency\" : \"BTC\" , \"address\" : \"1GV8fYUqywhiy8nLxyRgyVnLbKurXDQgKC\" } ] } text/csv HTTP/1.1 200 OK Content-Type: text/csv id,at,currency,address 80c9e6a1-4bc6-4459-b09b-7a5c0226e85c,2020-01-21T22:00:11.183Z,BTC,3ATtmYVkHbqpUsVdifZ9pe1BqhZMonHD7H 2e924046-c6aa-40eb-89b4-7aacfd78cc0a,2020-01-15T12:00:11.183Z,BTC,1738aQbJgGsQBHbhLqwX7MaBcjLY1PoDUf ... 48ed1d3f-3f16-4626-82f1-3bf62cdc7238,2020-01-02T07:00:11.183Z,BTC,1GV8fYUqywhiy8nLxyRgyVnLbKurXDQgKC Examples: Curl curl \\ --request GET \\ --header \"Authorization: Bearer ${ YOUR_API_KEY } \" \\ --header \"Accept: application/json\" \\ https://api.blockchain-sonar-test.com/v1/address?currency = BTC & afterId = 48ed1d3f-3f16-4626-82f1-3bf62cdc7238 curl \\ --request GET \\ --header \"Authorization: Bearer ${ YOUR_API_KEY } \" \\ --header \"Accept: text/csv\" \\ https://api.blockchain-sonar-test.com/v1/address?currency = BTC & afterId = 48ed1d3f-3f16-4626-82f1-3bf62cdc7238 Python TBD JavaScript TBD Watch address By creating an address transaction notification, you will receive a notification after a new incoming or outgoing transaction happens and reaches a number of confirmations. Request: POST /v1/address HTTP/1.1 Content-Type: application/json { \"$schema\" : \"https://schemas.blockchain-sonar.com/v1/address/watch/request.json\" , \"currency\" : \"BTC\" , \"address\" : \"1GV8fYUqywhiy8nLxyRgyVnLbKurXDQgKC\" } Response: HTTP/1.1 201 OK Content-Type: application/json { \"$schema\" : \"https://schemas.blockchain-sonar.com/v1/address/watch/response.json\" , \"id\" : \"ddcb3c1a-2382-4a1e-961d-93090a3c22cb\" , \"at\" : \"2020-01-02T07:00:11.183Z\" , \"currency\" : \"BTC\" , \"address\" : \"1GV8fYUqywhiy8nLxyRgyVnLbKurXDQgKC\" } Examples: Curl curl \\ --request POST \\ --header \"Authorization: Bearer ${ YOUR_API_KEY } \" \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ https://api.blockchain-sonar-test.com/v1/address \\ --data-binary \\ { \"currency\" : \"BTC\" , \"address\" : \"1GV8fYUqywhiy8nLxyRgyVnLbKurXDQgKC\" } Python TBD JavaScript TBD Un-watch addresses You can delete a watch address by address_id using this resource. Request: DELETE /v1/address/{address_id} HTTP/1.1 Authorization: Bearer ${YOUR_API_KEY} Accept: application/json Response: HTTP/1.1 201 OK Content-Type: application/json { \"$schema\" : \"https://schemas.blockchain-sonar.com/v1/address/unwatch/response.json\" , \"id\" : \"70acf569-fe7a-4b94-803c-1c8d1aedb413\" , \"at\" : \"2020-01-21T22:00:11.183Z\" , \"currency\" : \"BTC\" , \"address\" : \"3Jv4X7t1NdzCk4nPt4qKbeZYLMta8iASG2\" } Examples: Curl curl \\ --request DELETE \\ --header \"Authorization: Bearer ${ YOUR_API_KEY } \" \\ --header \"Accept: application/json\" \\ https://api.blockchain-sonar-test.com/v1/address/70acf569-fe7a-4b94-803c-1c8d1aedb413 Python TBD JavaScript TBD Fetch events We support API notification, and you can get notification messages from all addresses using this resource. Parameters: Name Type Mandatory Description currency STRING YES Filter by currency . Comma separated combination of currency acronyms like BTC, DASH, ETH, etc. Request: GET /v1/event?currency=BTC HTTP/1.1 Authorization: Bearer ${YOUR_API_KEY} Accept: application/json Response: HTTP/1.1 200 OK Content-Type: application/json { \"$schema\" : \"https://schemas.blockchain-sonar.com/v1/address/fetch/response.json\" , \"currency\" : \"BTC\" , ... TBD }","title":"API"},{"location":"api/#api","text":"Test Environment The Blockchain Sonar test environment is used by default in our API call examples. To use curl examples as-is, please export environment variable YOUR_API_KEY : export YOUR_API_KEY = \"<Your API key from Dashboard>\"","title":"API"},{"location":"api/#getting-started","text":"","title":"Getting Started"},{"location":"api/#choose-api-endpoint","text":"See Environments section.","title":"Choose API endpoint"},{"location":"api/#setup-api-key","text":"Create a Blockchain Sonar account (it is free of any charges) by clicking the Sign up button on Landing site and following the instructions. Account creation requires email confirmation to complete. Create a first API key from your account page on Dashboard site by clicking the Add new API key button in API Keys section. iuiip","title":"Setup API Key"},{"location":"api/#events-subscription","text":"","title":"Events Subscription"},{"location":"api/#long-polling","text":"Use this method to receive incoming events using long polling on a Fetch events resource.","title":"Long Polling"},{"location":"api/#webhook-subscriber","text":"Create a new Webhook subscriber for an API key by clicking the Add a Webhook Subscriber button to the right of the API key. Optionally, see for Webhook Subscriber Advanced Settings to setup webhook authentication, retry policy, etc.","title":"Webhook Subscriber"},{"location":"api/#websocket-subscriber","text":"Create a new WebSocket subscriber for an API key by clicking the Add a WebSocket Subscriber button to the right of the API key. Optionally, see for WebSocket Subscriber Advanced Settings to setup webhook authentication, retry policy, etc.","title":"WebSocket Subscriber"},{"location":"api/#resources","text":"","title":"Resources"},{"location":"api/#list-watched-addresses","text":"Using this resource you can list all addresses that you have created. Parameters: Name Type Mandatory Description currency STRING NO Filter by currency . Comma separated combination of currency acronyms like BTC, DASH, ETH, etc. beforeId STRING NO Request page before (newer) this pagination id. Pagination's param . afterId STRING NO Request page after (older) this pagination id. Pagination's param . limit INT NO Number of results per request. Default 500; max 1000. Pagination's param . Request: application/json GET /v1/address HTTP/1.1 Authorization: Bearer ${YOUR_API_KEY} Accept: application/json text/csv GET /v1/address HTTP/1.1 Authorization: Bearer ${YOUR_API_KEY} Accept: text/csv Response: application/json HTTP/1.1 200 OK Content-Type: application/json { \"$schema\" : \"https://schemas.blockchain-sonar.com/v1/address/list/response.json\" , \"before\" : null , \"after\" : \"/v1/address?currency=BTC&afterId=48ed1d3f-3f16-4626-82f1-3bf62cdc7238\" , \"items\" : [ { \"id\" : \"80c9e6a1-4bc6-4459-b09b-7a5c0226e85c\" , \"at\" : \"2020-01-21T22:00:11.183Z\" , \"currency\" : \"BTC\" , \"address\" : \"3ATtmYVkHbqpUsVdifZ9pe1BqhZMonHD7H\" }, { \"id\" : \"2e924046-c6aa-40eb-89b4-7aacfd78cc0a\" , \"at\" : \"2020-01-15T12:00:11.183Z\" , \"currency\" : \"BTC\" , \"address\" : \"1738aQbJgGsQBHbhLqwX7MaBcjLY1PoDUf\" }, ... , { \"id\" : \"48ed1d3f-3f16-4626-82f1-3bf62cdc7238\" , \"at\" : \"2020-01-02T07:00:11.183Z\" , \"currency\" : \"BTC\" , \"address\" : \"1GV8fYUqywhiy8nLxyRgyVnLbKurXDQgKC\" } ] } text/csv HTTP/1.1 200 OK Content-Type: text/csv id,at,currency,address 80c9e6a1-4bc6-4459-b09b-7a5c0226e85c,2020-01-21T22:00:11.183Z,BTC,3ATtmYVkHbqpUsVdifZ9pe1BqhZMonHD7H 2e924046-c6aa-40eb-89b4-7aacfd78cc0a,2020-01-15T12:00:11.183Z,BTC,1738aQbJgGsQBHbhLqwX7MaBcjLY1PoDUf ... 48ed1d3f-3f16-4626-82f1-3bf62cdc7238,2020-01-02T07:00:11.183Z,BTC,1GV8fYUqywhiy8nLxyRgyVnLbKurXDQgKC Examples: Curl curl \\ --request GET \\ --header \"Authorization: Bearer ${ YOUR_API_KEY } \" \\ --header \"Accept: application/json\" \\ https://api.blockchain-sonar-test.com/v1/address?currency = BTC & afterId = 48ed1d3f-3f16-4626-82f1-3bf62cdc7238 curl \\ --request GET \\ --header \"Authorization: Bearer ${ YOUR_API_KEY } \" \\ --header \"Accept: text/csv\" \\ https://api.blockchain-sonar-test.com/v1/address?currency = BTC & afterId = 48ed1d3f-3f16-4626-82f1-3bf62cdc7238 Python TBD JavaScript TBD","title":"List watched addresses"},{"location":"api/#watch-address","text":"By creating an address transaction notification, you will receive a notification after a new incoming or outgoing transaction happens and reaches a number of confirmations. Request: POST /v1/address HTTP/1.1 Content-Type: application/json { \"$schema\" : \"https://schemas.blockchain-sonar.com/v1/address/watch/request.json\" , \"currency\" : \"BTC\" , \"address\" : \"1GV8fYUqywhiy8nLxyRgyVnLbKurXDQgKC\" } Response: HTTP/1.1 201 OK Content-Type: application/json { \"$schema\" : \"https://schemas.blockchain-sonar.com/v1/address/watch/response.json\" , \"id\" : \"ddcb3c1a-2382-4a1e-961d-93090a3c22cb\" , \"at\" : \"2020-01-02T07:00:11.183Z\" , \"currency\" : \"BTC\" , \"address\" : \"1GV8fYUqywhiy8nLxyRgyVnLbKurXDQgKC\" } Examples: Curl curl \\ --request POST \\ --header \"Authorization: Bearer ${ YOUR_API_KEY } \" \\ --header \"Content-Type: application/json\" \\ --header \"Accept: application/json\" \\ https://api.blockchain-sonar-test.com/v1/address \\ --data-binary \\ { \"currency\" : \"BTC\" , \"address\" : \"1GV8fYUqywhiy8nLxyRgyVnLbKurXDQgKC\" } Python TBD JavaScript TBD","title":"Watch address"},{"location":"api/#un-watch-addresses","text":"You can delete a watch address by address_id using this resource. Request: DELETE /v1/address/{address_id} HTTP/1.1 Authorization: Bearer ${YOUR_API_KEY} Accept: application/json Response: HTTP/1.1 201 OK Content-Type: application/json { \"$schema\" : \"https://schemas.blockchain-sonar.com/v1/address/unwatch/response.json\" , \"id\" : \"70acf569-fe7a-4b94-803c-1c8d1aedb413\" , \"at\" : \"2020-01-21T22:00:11.183Z\" , \"currency\" : \"BTC\" , \"address\" : \"3Jv4X7t1NdzCk4nPt4qKbeZYLMta8iASG2\" } Examples: Curl curl \\ --request DELETE \\ --header \"Authorization: Bearer ${ YOUR_API_KEY } \" \\ --header \"Accept: application/json\" \\ https://api.blockchain-sonar-test.com/v1/address/70acf569-fe7a-4b94-803c-1c8d1aedb413 Python TBD JavaScript TBD","title":"Un-watch addresses"},{"location":"api/#fetch-events","text":"We support API notification, and you can get notification messages from all addresses using this resource. Parameters: Name Type Mandatory Description currency STRING YES Filter by currency . Comma separated combination of currency acronyms like BTC, DASH, ETH, etc. Request: GET /v1/event?currency=BTC HTTP/1.1 Authorization: Bearer ${YOUR_API_KEY} Accept: application/json Response: HTTP/1.1 200 OK Content-Type: application/json { \"$schema\" : \"https://schemas.blockchain-sonar.com/v1/address/fetch/response.json\" , \"currency\" : \"BTC\" , ... TBD }","title":"Fetch events"},{"location":"blockchains-supported/","text":"Blockchains Supported Blockchain Sonar supports a set of blockchains, including the relevant Test Networks for experimentation. Our API requires you to specify the CURRENCY when use the API. The CURRENCY acronyms are as follows: Currency Acronym Bitcoin BTC Dash DASH Dogecoin DOGE Litecoin LTC Zcash ZEC TBD - TBD - TBD - TBD -","title":"Blockchains Supported"},{"location":"blockchains-supported/#blockchains-supported","text":"Blockchain Sonar supports a set of blockchains, including the relevant Test Networks for experimentation. Our API requires you to specify the CURRENCY when use the API. The CURRENCY acronyms are as follows: Currency Acronym Bitcoin BTC Dash DASH Dogecoin DOGE Litecoin LTC Zcash ZEC TBD - TBD - TBD - TBD -","title":"Blockchains Supported"},{"location":"changelog/","text":"Change Log YYYY-MM-DD TBD","title":"Change Log"},{"location":"changelog/#change-log","text":"","title":"Change Log"},{"location":"changelog/#yyyy-mm-dd","text":"TBD","title":"YYYY-MM-DD"},{"location":"devel-blockchan-note-bitcoin/","text":"Bitcoin Node Main official full node is provided by BitcoinCore application . There are also alternative full node implementations. See a question on StackOvervlow . BitcoinCore Overview A full node is a program that fully validates transactions and blocks. Almost all full nodes also help the network by accepting transactions and blocks from other full nodes, validating those transactions and blocks, and then relaying them to further full nodes. Most full nodes also serve lightweight clients by allowing them to transmit their transactions to the network and by notifying them when a transaction affects their wallet. If not enough nodes perform this function, clients won\u2019t be able to connect through the peer-to-peer network\u2014they\u2019ll have to use centralized services instead. Many people and organizations volunteer to run full nodes using spare computing and bandwidth resources\u2014but more volunteers are needed to allow Bitcoin to continue to grow. This document describes how you can help and what helping will cost you. Quick Start via Docker Setup Hash your RPC password. See RPC Tools for details. Use following command to generate the value: wget --quiet --output-document = - \\ https://raw.githubusercontent.com/bitcoin/bitcoin/09530b0255aba083bf168322a95b89cc387e616f/share/rpcauth/rpcauth.py \\ | python3 /dev/stdin dev_user strong_password Create a directory to store blockchain database /srv/bitcoin-mainnet or/and /srv/bitcoin-testnet with neccessary available disk space (google blockchain size ). Pull a docker image ruimarinho/bitcoin-core Run Mainnet Node docker run --rm --interactive --tty --name bitcoin-mainnet \\ --mount type = bind,source = /srv/bitcoin-mainnet,target = /var/lib/bitcoin-core \\ --env BITCOIN_DATA = /var/lib/bitcoin-core \\ --publish 127 .0.0.1:8332:8332 \\ --publish 8333 :8333 \\ ruimarinho/bitcoin-core \\ -printtoconsole \\ -port = 8333 \\ -rpcbind = 0 .0.0.0:8332 \\ -rpcallowip = 0 .0.0.0/0 \\ -rpcauth = 'dev_user:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx$xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' docker logs --follow bitcoin-mainnet Run Testnet Node docker run --rm --interactive --tty --name bitcoin-testnet \\ --mount type = bind,source = /srv/bitcoin-testnet,target = /var/lib/bitcoin-core \\ --env BITCOIN_DATA = /var/lib/bitcoin-core \\ --publish 127 .0.0.1:18332:18332 \\ --publish 18333 :18333 \\ ruimarinho/bitcoin-core \\ -printtoconsole \\ -testnet = 1 \\ -port = 18333 \\ -rpcbind = 0 .0.0.0:18332 \\ -rpcallowip = 0 .0.0.0/0 \\ -rpcauth = 'dev_user:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx$xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' docker logs --follow bitcoin-testnet btcd Overview btcd is an alternative full node bitcoin implementation written in Go (golang). This project is currently under active development and is in a Beta state. It is extremely stable and has been in production use since October 2013. It properly downloads, validates, and serves the block chain using the exact rules (including consensus bugs) for block acceptance as Bitcoin Core. We have taken great care to avoid btcd causing a fork to the block chain. It includes a full block validation testing framework which contains all of the 'official' block acceptance tests (and some additional ones) that is run on every pull request to help ensure it properly follows consensus. Also, it passes all of the JSON test data in the Bitcoin Core code. It also properly relays newly mined blocks, maintains a transaction pool, and relays individual transactions that have not yet made it into a block. It ensures all individual transactions admitted to the pool follow the rules required by the block chain and also includes more strict checks which filter transactions based on miner requirements (\"standard\" transactions).","title":"Bitcoin Node"},{"location":"devel-blockchan-note-bitcoin/#bitcoin-node","text":"Main official full node is provided by BitcoinCore application . There are also alternative full node implementations. See a question on StackOvervlow .","title":"Bitcoin Node"},{"location":"devel-blockchan-note-bitcoin/#bitcoincore","text":"","title":"BitcoinCore"},{"location":"devel-blockchan-note-bitcoin/#overview","text":"A full node is a program that fully validates transactions and blocks. Almost all full nodes also help the network by accepting transactions and blocks from other full nodes, validating those transactions and blocks, and then relaying them to further full nodes. Most full nodes also serve lightweight clients by allowing them to transmit their transactions to the network and by notifying them when a transaction affects their wallet. If not enough nodes perform this function, clients won\u2019t be able to connect through the peer-to-peer network\u2014they\u2019ll have to use centralized services instead. Many people and organizations volunteer to run full nodes using spare computing and bandwidth resources\u2014but more volunteers are needed to allow Bitcoin to continue to grow. This document describes how you can help and what helping will cost you.","title":"Overview"},{"location":"devel-blockchan-note-bitcoin/#quick-start-via-docker","text":"","title":"Quick Start via Docker"},{"location":"devel-blockchan-note-bitcoin/#setup","text":"Hash your RPC password. See RPC Tools for details. Use following command to generate the value: wget --quiet --output-document = - \\ https://raw.githubusercontent.com/bitcoin/bitcoin/09530b0255aba083bf168322a95b89cc387e616f/share/rpcauth/rpcauth.py \\ | python3 /dev/stdin dev_user strong_password Create a directory to store blockchain database /srv/bitcoin-mainnet or/and /srv/bitcoin-testnet with neccessary available disk space (google blockchain size ). Pull a docker image ruimarinho/bitcoin-core","title":"Setup"},{"location":"devel-blockchan-note-bitcoin/#run-mainnet-node","text":"docker run --rm --interactive --tty --name bitcoin-mainnet \\ --mount type = bind,source = /srv/bitcoin-mainnet,target = /var/lib/bitcoin-core \\ --env BITCOIN_DATA = /var/lib/bitcoin-core \\ --publish 127 .0.0.1:8332:8332 \\ --publish 8333 :8333 \\ ruimarinho/bitcoin-core \\ -printtoconsole \\ -port = 8333 \\ -rpcbind = 0 .0.0.0:8332 \\ -rpcallowip = 0 .0.0.0/0 \\ -rpcauth = 'dev_user:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx$xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' docker logs --follow bitcoin-mainnet","title":"Run Mainnet Node"},{"location":"devel-blockchan-note-bitcoin/#run-testnet-node","text":"docker run --rm --interactive --tty --name bitcoin-testnet \\ --mount type = bind,source = /srv/bitcoin-testnet,target = /var/lib/bitcoin-core \\ --env BITCOIN_DATA = /var/lib/bitcoin-core \\ --publish 127 .0.0.1:18332:18332 \\ --publish 18333 :18333 \\ ruimarinho/bitcoin-core \\ -printtoconsole \\ -testnet = 1 \\ -port = 18333 \\ -rpcbind = 0 .0.0.0:18332 \\ -rpcallowip = 0 .0.0.0/0 \\ -rpcauth = 'dev_user:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx$xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' docker logs --follow bitcoin-testnet","title":"Run Testnet Node"},{"location":"devel-blockchan-note-bitcoin/#btcd","text":"","title":"btcd"},{"location":"devel-blockchan-note-bitcoin/#overview_1","text":"btcd is an alternative full node bitcoin implementation written in Go (golang). This project is currently under active development and is in a Beta state. It is extremely stable and has been in production use since October 2013. It properly downloads, validates, and serves the block chain using the exact rules (including consensus bugs) for block acceptance as Bitcoin Core. We have taken great care to avoid btcd causing a fork to the block chain. It includes a full block validation testing framework which contains all of the 'official' block acceptance tests (and some additional ones) that is run on every pull request to help ensure it properly follows consensus. Also, it passes all of the JSON test data in the Bitcoin Core code. It also properly relays newly mined blocks, maintains a transaction pool, and relays individual transactions that have not yet made it into a block. It ensures all individual transactions admitted to the pool follow the rules required by the block chain and also includes more strict checks which filter transactions based on miner requirements (\"standard\" transactions).","title":"Overview"},{"location":"devel-blockchan-note-zclassic/","text":"ZClassic Node ZClassic Full Node Overview TBD Quick Start via Docker TBD Setup TBD Run Mainnet Node docker run --rm --interactive --tty --name zclassic-mainnet \\ --mount type=bind,source=/srv/zclassic-mainnet/zcash-params,target=/data/.zcash-params \\ --mount type=bind,source=/srv/zclassic-mainnet/zclassic,target=/data/.zclassic \\ --publish 0.0.0.0:8033:8033 \\ --publish 127.0.0.1:8023:8023 \\ zxteamorg/contrib.zclassic \\ -printtoconsole \\ -port=8033 \\ -rpcbind=0.0.0.0:8023 \\ -rpcallowip=0.0.0.0/0 Run Testnet Node TBD","title":"ZClassic Node"},{"location":"devel-blockchan-note-zclassic/#zclassic-node","text":"","title":"ZClassic Node"},{"location":"devel-blockchan-note-zclassic/#zclassic-full-node","text":"","title":"ZClassic Full Node"},{"location":"devel-blockchan-note-zclassic/#overview","text":"TBD","title":"Overview"},{"location":"devel-blockchan-note-zclassic/#quick-start-via-docker","text":"TBD","title":"Quick Start via Docker"},{"location":"devel-blockchan-note-zclassic/#setup","text":"TBD","title":"Setup"},{"location":"devel-blockchan-note-zclassic/#run-mainnet-node","text":"docker run --rm --interactive --tty --name zclassic-mainnet \\ --mount type=bind,source=/srv/zclassic-mainnet/zcash-params,target=/data/.zcash-params \\ --mount type=bind,source=/srv/zclassic-mainnet/zclassic,target=/data/.zclassic \\ --publish 0.0.0.0:8033:8033 \\ --publish 127.0.0.1:8023:8023 \\ zxteamorg/contrib.zclassic \\ -printtoconsole \\ -port=8033 \\ -rpcbind=0.0.0.0:8023 \\ -rpcallowip=0.0.0.0/0","title":"Run Mainnet Node"},{"location":"devel-blockchan-note-zclassic/#run-testnet-node","text":"TBD","title":"Run Testnet Node"},{"location":"devel-repositories/","text":"Repositories Project group is https://dev.zxteam.net/blockchainsonar Documentation project is MkDocs-based site that contains sources for Public and Internal documentation sites. Tools set of manual tools","title":"Repositories"},{"location":"devel-repositories/#repositories","text":"Project group is https://dev.zxteam.net/blockchainsonar Documentation project is MkDocs-based site that contains sources for Public and Internal documentation sites. Tools set of manual tools","title":"Repositories"},{"location":"rate-limits/","text":"Rate Limits TBD","title":"Rate Limits"},{"location":"rate-limits/#rate-limits","text":"TBD","title":"Rate Limits"},{"location":"roadmap/","text":"Roadmap TDB","title":"Roadmap"},{"location":"roadmap/#roadmap","text":"TDB","title":"Roadmap"},{"location":"subscriber-webhook/","text":"Webhook Subscriber Advanced Settings What is a Webhook? A Webhook in web development is a method of augmenting or altering the behavior of a web page or web application with custom callbacks. These callbacks may be maintained, modified, and managed by third-party users and developers who may not necessarily be affiliated with the originating website or application.","title":"Webhook"},{"location":"subscriber-webhook/#webhook-subscriber-advanced-settings","text":"","title":"Webhook Subscriber Advanced Settings"},{"location":"subscriber-webhook/#what-is-a-webhook","text":"A Webhook in web development is a method of augmenting or altering the behavior of a web page or web application with custom callbacks. These callbacks may be maintained, modified, and managed by third-party users and developers who may not necessarily be affiliated with the originating website or application.","title":"What is a Webhook?"},{"location":"subscriber-websocket/","text":"WebSocket Subscriber Advanced Settings TBD","title":"WebSocket"},{"location":"subscriber-websocket/#websocket-subscriber-advanced-settings","text":"TBD","title":"WebSocket Subscriber Advanced Settings"}]}